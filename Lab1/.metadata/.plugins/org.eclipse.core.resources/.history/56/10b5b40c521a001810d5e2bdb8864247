import java.text.DecimalFormat;
public class main {
	
	static double val;
	static double []valuesX = new double[101];
	static double []valuesY = new double[101];
	static double []newValuesY = new double[101];
	static int a = 1, b = 0, c = 0;
	static double min = -1;
	static double max = 1;
	static double step = 0.2;
	static int index, space, k;
	static DecimalFormat df = new DecimalFormat("0.00"); // Set your desired format here.
	static boolean[] use = new boolean[101];
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		findYValues();
		drawAll();
		System.out.println();
	}
	
	
	public static void findYValues() {
		
		val = min;
		for (index = 0; val <= max; val = Math.round((val+step)*100) / 100.0, index++) {
			valuesX[index] = val;
			valuesY[index] = Math.round(functionValue(a, b, c, val) * 100) / 100.0;
		}
		
		for (int i = 0 ; i < index; i++) {
			use[i] = true;
		}
		
		validateYValues();
		
		for (int i = 0 ; i < index; i++) {
			System.out.print(use[i] +  " ");
		}System.out.println();
	}
	
	public static void validateYValues() {
		int noOfValues = index;
		for (int i = 0; i < noOfValues; i++) {
			for (int j = i+1; j < noOfValues; j++) {
				if (valuesY[i] == valuesY[j]) {
					use[j] = false;
					break; 
				}
			}
		}
		for (int i = 0; i < noOfValues; i++) {
			if (use[i] == true) {
				newValuesY[k++] = valueY[i];
			}
		}
	}
	
	
	
	public static void drawAll() {
		
		int noOfValues = index;
		int noOfSpaces = 3;
		int spaces = noOfSpaces; 
		
		k = 0;
		for (index = 0; index < noOfValues; index++, spaces+=3) {
			if (index%2 == 0) {
				System.out.print(df.format(nevaluesY[k])+ "|");
				k++;
			}
			else {
				System.out.print("    "+ "|");
			}
			
			for (space = 0; space < spaces; space++) {
				System.out.print(" ");
			}
			System.out.print('o');
			
			for (space = 0; space < 6*(max-min)/step - 2*spaces + 6; space++) {
				System.out.print(" ");
			}
			System.out.print('o');
			
			System.out.println();
		}
		
		System.out.print("       ");
		for (index = 0; index < 6*(max-min)/step; index++ ) {
			System.out.print("-");
		}
		System.out.println();
		System.out.print("        ");
		for (index = 0; index < noOfValues; index++ ) {
			System.out.print(valuesX[index] + "  ");
		}
	}
	
	public static double functionValue(int a, int b, int c, double x) {
		return (a*x*x + b*x + c) * 100 / 100;
	}

}

